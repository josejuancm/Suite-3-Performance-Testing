name: Deploy ODS

on:
  workflow_dispatch:
    inputs:
      vm_name:
        description: "The name of the VM to run the command on"
        required: true
      resource_group:
        description: "The resource group of the VM"
        required: true
      target_environment:
        description: "Select the environment"
        required: true
        type: choice
        options:
          - develop
        default: staging

env:
  ARM_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.target_environment }}
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ env.ARM_CLIENT_ID }}","clientSecret":"${{ env.ARM_CLIENT_SECRET }}","subscriptionId":"${{ env.ARM_SUBSCRIPTION_ID }}","tenantId":"${{ env.ARM_TENANT_ID }}"}'

      - name: Run Deployment Commands
        run: |
          # Create the deployment script content
          SCRIPT_CONTENT='
          Set-Location "C:\Temp\EdFi.Suite3.RestApi.Databases.Standard"
          
          # Create deployment script
          $deployScript = @"
          Set-Location \"C:\Temp\EdFi.Suite3.RestApi.Databases.Standard\"
          
          Write-Host "Importing Deployment Module..."
          Import-Module .\Deployment.psm1
          if (-not $?) {
              Write-Error "Failed to import Deployment module"
              exit 1
          }
          
          Write-Host "Initializing Deployment Environment..."
          Initialize-DeploymentEnvironment
          if (-not $?) {
              Write-Error "Failed to initialize deployment environment"
              exit 1
          }
          
          Write-Host "Deployment completed successfully"
          "@
          
          # Save the script
          $deployScript | Out-File -FilePath "C:\Temp\deploy-ods.ps1" -Encoding UTF8
          
          # Execute the script
          & powershell.exe -ExecutionPolicy Bypass -File "C:\Temp\deploy-ods.ps1"
          '
          
          az vm run-command invoke \
            --command-id RunPowerShellScript \
            --name "${{ github.event.inputs.vm_name }}" \
            --resource-group "${{ github.event.inputs.resource_group }}" \
            --scripts "$SCRIPT_CONTENT" 