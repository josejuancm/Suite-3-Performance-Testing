name: Run VM Command

on:
  workflow_dispatch:
    inputs:
      target_environment:
        description: "Select the environment"
        required: true
        type: choice
        options:
          - develop
        default: staging
      vm_name:
        description: "The name of the VM to run the command on"
        required: true
      resource_group:
        description: "The resource group of the VM"
        required: true
      command_script:
        description: "The PowerShell command(s) to run on the VM"
        required: true
        default: |
          try { `
            Write-Host 'Starting script'; `
            $desktop = [System.Environment]::GetFolderPath('Desktop'); `
            Write-Host ('Desktop path: ' + $desktop); `
            New-Item -Path ($desktop + '\\test.txt') -ItemType File -Value 'This is a test file' -Force; `
            Write-Host 'File creation completed' `
          } catch { `
            Write-Host ('Error: ' + $_.Exception.Message) `
          }

env:
  ARM_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}

jobs:
  run-command:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.target_environment }}
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ env.ARM_CLIENT_ID }}","clientSecret":"${{ env.ARM_CLIENT_SECRET }}","subscriptionId":"${{ env.ARM_SUBSCRIPTION_ID }}","tenantId":"${{ env.ARM_TENANT_ID }}"}'

      - name: Run Command on VM
        run: |
          az vm run-command invoke \
            --command-id RunPowerShellScript \
            --name "${{ github.event.inputs.vm_name }}" \
            --resource-group "${{ github.event.inputs.resource_group }}" \
            --scripts "${{ github.event.inputs.command_script }}"